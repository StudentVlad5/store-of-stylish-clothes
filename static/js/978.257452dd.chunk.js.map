{"version":3,"file":"static/js/978.257452dd.chunk.js","mappings":"yTAeaA,EAAc,SAAHC,GAAsB,IAGxCC,EAHwBC,EAAQF,EAARE,SACtBC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAOF,EAAAA,EAAAA,IAAYG,EAAAA,IAASN,UAE1BA,EAARK,EAAoBA,EAAKE,KAAI,SAAAC,GAAI,OAAKA,CAAI,IAAkB,IAChDL,EAAAA,EAAAA,IAAYM,EAAAA,IAAxB,IAEMC,GAAcC,EAAAA,EAAAA,MACdC,GAAWC,EAAAA,EAAAA,MAETC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SAEFG,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAE,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIF,IAHR,MACnB3B,GACoBA,EAAU4B,SAASL,IAEtB,CAADE,EAAAE,KAAA,QAEmC,OADjDf,GAASiB,EAAAA,EAAAA,IAAeN,KACxBO,EAAAA,EAAAA,IAAU,uCAAuCL,EAAAM,OAAA,iBAGnDnB,GAASoB,EAAAA,EAAAA,IAAYT,KACrBO,EAAAA,EAAAA,IAAU,kCAAkC,wBAAAL,EAAAQ,OAAA,GAAAX,EAAA,KAC7C,gBAZmBY,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,KAuBpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAAAC,SACLtC,EAASM,KAAI,SAAAiC,GACZ,OACEH,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAAAC,UACNF,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAE,iBAAAC,OAAmBH,EAAKI,MAAOL,UACxCM,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,OAAQ,OACRC,QAAS,OACTC,eAAgB,gBAChBC,cAAe,UACfX,SAAA,EAEFF,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAAAC,SACXC,EAAKW,OAASX,EAAKW,OAAS,SAE/Bd,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXc,IAAKZ,EAAKa,UACVC,IAAKd,EAAKe,MACVC,MAAM,MACNT,OAAO,MACPU,QAAQ,UAEVpB,EAAAA,EAAAA,KAACC,EAAAA,GAAkB,CAAAC,UACjBF,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAAAC,UACXF,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAAAC,SAAEC,EAAKe,aAGvBV,EAAAA,EAAAA,MAACP,EAAAA,GAAW,CAAAC,SAAA,CACS,IAAlBC,EAAKkB,UACJb,EAAAA,EAAAA,MAACP,EAAAA,GAAa,CAAAC,SAAA,CACXC,EAAKmB,QACJd,EAAAA,EAAAA,MAACP,EAAAA,GAAe,CAAAC,SAAA,EACdF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,YACLC,EAAKmB,MACD,OAAJnB,QAAI,IAAJA,GAAAA,EAAM1B,SAAe,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAM1B,SAAWA,MAGlC,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,YACLf,EAAAA,EAAAA,MAACP,EAAAA,GAAY,CAAAC,SAAA,CACVC,EAAKoB,SACLpB,EAAK1B,gBAKZuB,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAAAC,UACP,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,gBACLhB,EAAAA,EAAAA,MAACP,EAAAA,GAAe,CAAAC,SAAA,CACbC,EAAKqB,aACLrB,EAAK1B,eAKduB,EAAAA,EAAAA,KAACC,EAAAA,GAAiB,CAChBwB,SAlEavC,EAkEmBiB,EAAKI,KAlElB,SAAAmB,GACnCA,EAAEC,iBACFD,EAAEE,kBACqB,aAAnBvD,EAAYa,IACdX,GAASsD,EAAAA,EAAAA,IAAU,IAEpBhE,EAA+Ce,EAAeM,IAAjD4C,EAAAA,EAAAA,IAAO,wBACvB,GA2D6D5B,SAE1CvC,EAAU4B,SAASY,EAAKI,OACvBP,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAAC8B,KAAM,GAAIC,KAAMC,EAAAA,EAAMC,OAAOC,aAEzCnC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAAC8B,KAAM,GAAIK,MAAOH,EAAAA,EAAMC,OAAOG,mBA1DxClC,EAAKI,MAbI,IAAArB,CAyF3B,KAGN,C,iQCjIMoD,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAIhCC,GAAmBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAiBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8DAMpCI,EAAgBP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yLAOET,EAAAA,EAAMgB,YAAYC,SAK9CC,EAAcZ,EAAAA,GAAOQ,IAAGK,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+LAQIT,EAAAA,EAAMgB,YAAYC,S,uCCfvCG,EAAY,WACvB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC1F,EAAQ4F,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCZ,EAAAA,EAAAA,UAAS,GAAEa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAyBhB,EAAAA,EAAAA,UAAS,GAAEiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAQF,EAAA,GACrBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAApB,EAAAA,EAAAA,GAAAkB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9B3F,GAAKpB,EAAAA,EAAAA,IAAYM,EAAAA,IACf4G,GAAMC,EAAAA,EAAAA,MAAND,EAwCR,OAhCAE,EAAAA,EAAAA,YAAU,WACK,IAATT,GACFM,EAAgB,CAAEN,KAAM,EAAGU,QApBnB,IAsBZ,GAAG,KAEHD,EAAAA,EAAAA,YAAU,WACR,IAAKT,EAAkB,CACrB,IAAMW,EAAS,CAAEX,KAAM,EAAGU,QA1BlB,IA2BRT,EAAS,GACTK,EAAgBK,EAClB,EAEA,eAAAC,GAAAvG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAqG,EAAAC,EAAA,OAAAxG,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACoB,OAAnBwE,GAAa,GAAM1E,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMkG,EAAAA,EAAAA,IAAa,iBAADlF,OAChBpB,EAAE,KAAAoB,OAAIwE,IACvB,KAAD,EAFW,GAEXQ,EAAAlG,EAAAqG,KAFOF,EAAID,EAAJC,KAGE,CAADnG,EAAAE,KAAA,eAAAF,EAAAM,OAAA,UACAgG,EAAAA,EAAAA,IAAaV,EAAE,kCAAgC,OAExDtB,EAAY6B,EAAKA,MACjBjB,EAAaqB,KAAKC,KAAKL,EAAKM,MAzCtB,KAyCwCzG,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA0G,GAAA1G,EAAA,SAE9C8E,EAAQ9E,EAAA0G,IAAQ,QAEI,OAFJ1G,EAAAC,KAAA,GAEhByE,GAAa,GAAO1E,EAAA2G,OAAA,6BAAA3G,EAAAQ,OAAA,GAAAX,EAAA,yBAdD,OAgBtB,WAhBsB,OAAAoG,EAAAvF,MAAC,KAADC,UAAA,EAAvB,IAiBF,GAAG,CAACiF,EAAGP,EAhDK,GAgDUK,KAGpB9E,EAAAA,EAAAA,KAACC,EAAmB,CAAAC,UAClBF,EAAAA,EAAAA,KAACC,EAAiB,CAAAC,UAChBF,EAAAA,EAAAA,KAACC,EAAgB,CAAAC,UACfM,EAAAA,EAAAA,MAACP,EAAc,CAAAC,SAAA,CACZ2D,GAAYmC,EAAAA,EAAAA,MAAcC,EAAAA,EAAAA,KAC1BhC,IAASyB,EAAAA,EAAAA,IAAaV,EAAE,iCACxBpH,EAASsI,OAAS,IAAMjC,IACvBjE,EAAAA,EAAAA,KAACvC,EAAAA,EAAW,CAACG,SAAUA,KAGzB4C,EAAAA,EAAAA,MAAC2F,EAAAA,GAAO,CAAAjG,SAAA,EACNF,EAAAA,EAAAA,KAACoG,EAAAA,GAAY,CAAAlG,SAAE,sCACfF,EAAAA,EAAAA,KAACqG,EAAAA,GAAQ,CAAAnG,SAAC,aAGZF,EAAAA,EAAAA,KAACsG,EAAAA,EAAU,CACTjC,UAAWA,EACXkC,WAxDI,SAAAC,GACd1B,EAAa2B,IAAI,OAAQD,GACzB9B,EAAS8B,GACTzB,EAAgBD,EAClB,EAqDYL,KAAMA,YAOpB,EClEA,EApBqB,WACnB,IAAMlG,GAAWC,EAAAA,EAAAA,MAWjB,OAVAkI,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,YAE7C5B,EAAAA,EAAAA,YAAU,WACR3G,GACEwI,EAAAA,EAAAA,GAAgB,CACdC,aAAc,oBAGpB,GAAG,KAGDxG,EAAAA,EAAAA,MAAAyG,EAAAA,SAAA,CAAA/G,SAAA,EACEF,EAAAA,EAAAA,KAACkH,EAAAA,EAAG,CAAChG,MAAM,WAAWiG,YAAY,uBAClCnH,EAAAA,EAAAA,KAACqD,EAAS,MAGhB,C","sources":["components/Catalog/CatalogList/CatalogList.jsx","components/Favorites/Favorites.styled.js","components/Favorites/Favorites.jsx","pages/Favorite.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addReload } from 'redux/reload/slice';\nimport { addFavorite, removeFavorite } from 'redux/auth/operations';\nimport { getUser, selectId, selectIsLoggedIn } from 'redux/auth/selectors';\nimport { onSuccess, onInfo } from 'components/helpers/Messages/NotifyMessages';\n// import { BASE_URL_IMG } from 'BASE_CONST/Base-const';\n\nimport theme from 'components/baseStyles/Variables.styled';\nimport * as SC from './CatalogList.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nexport const CatalogList = ({ products }) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const user = useSelector(getUser).favorites;\n  let favorites;\n  user ? (favorites = user.map(item => +item)) : (favorites = []);\n  const _id = useSelector(selectId); //isLoggedIn\n\n  const routeParams = useParams();\n  const dispatch = useDispatch();\n\n  const { currency } = useContext(StatusContext);\n\n  const toggleFavorite = async id => {\n    let isInFavorite = false;\n    favorites\n      ? (isInFavorite = favorites.includes(id))\n      : (isInFavorite = false);\n    if (isInFavorite) {\n      dispatch(removeFavorite(id));\n      onSuccess('You remove plant from the favorite!');\n      return;\n    }\n    dispatch(addFavorite(id));\n    onSuccess('You add plant to the favorite!');\n  };\n\n  const handleFavoriteBtnClick = id => e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (routeParams.id === 'favorite') {\n      dispatch(addReload(true));\n    }\n    !isLoggedIn ? onInfo('You must be loggined!') : toggleFavorite(id);\n  };\n\n  return (\n    <SC.Grid>\n      {products.map(card => {\n        return (\n          <SC.Card key={card.uuid}>\n            <NavLink to={`/catalog/byid/${card.uuid}`}>\n              <div\n                style={{\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexDirection: 'column',\n                }}\n              >\n                <SC.CardStatus>\n                  {card.status ? card.status : 'new'}\n                </SC.CardStatus>\n                <SC.CardImage\n                  src={card.mainImage}\n                  alt={card.title}\n                  width=\"285\"\n                  height=\"460\"\n                  loading=\"lazy\"\n                />\n                <SC.CardDescription>\n                  <SC.CardTitle>\n                    <SC.CardName>{card.title}</SC.CardName>\n                  </SC.CardTitle>\n                </SC.CardDescription>\n                <SC.CardInfo>\n                  {card.discount !== 0 ? (\n                    <SC.CardPrices>\n                      {card.price && (\n                        <SC.CardDiscount>\n                          <span>Price: </span>\n                          {card.price}\n                          {card?.currency ? card?.currency : currency}\n                        </SC.CardDiscount>\n                      )}\n                      {card?.oldPrice && (\n                        <SC.CardPrice>\n                          {card.oldPrice}\n                          {card.currency}\n                        </SC.CardPrice>\n                      )}\n                    </SC.CardPrices>\n                  ) : (\n                    <SC.CardPrices>\n                      {card?.currentPrice && (\n                        <SC.CardDiscount>\n                          {card.currentPrice}\n                          {card.currency}\n                        </SC.CardDiscount>\n                      )}\n                    </SC.CardPrices>\n                  )}\n                  <SC.BtnForFavorite\n                    onClick={handleFavoriteBtnClick(card.uuid)}\n                  >\n                    {favorites.includes(card.uuid) ? (\n                      <SC.IconFav size={30} fill={theme.colors.darkGreen} />\n                    ) : (\n                      <SC.IconFav size={30} color={theme.colors.beige} />\n                    )}\n                  </SC.BtnForFavorite>\n                  {/* <span>Size</span>\n                  <div> */}\n                  {/* {card.options.map(option => {\n                      return (\n                        option.total != 0 && (\n                          <span key={option._id}>{option.title}</span>\n                        )\n                      );\n                    })} */}\n                  {/* </div> */}\n                </SC.CardInfo>\n              </div>\n            </NavLink>\n          </SC.Card>\n        );\n      })}\n    </SC.Grid>\n  );\n};\n\nCatalogList.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      oldPrice: PropTypes.number.isRequired,\n      currentPrice: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          oldPrice: PropTypes.number,\n          currentPrice: PropTypes.number,\n          total: PropTypes.number,\n        }),\n      ),\n      totalQuantity: PropTypes.number,\n      typeOfPlants: PropTypes.string,\n      light: PropTypes.string,\n      petFriendly: PropTypes.string,\n      maintenance: PropTypes.string,\n      potSize: PropTypes.shape({\n        size: PropTypes.number,\n        unit: PropTypes.string,\n        _id: PropTypes.string,\n      }),\n      hardToKill: PropTypes.string,\n      rare: PropTypes.string,\n      waterSchedule: PropTypes.string,\n      images: PropTypes.array,\n      category: PropTypes.string,\n    }),\n  ),\n};\n","import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Container, Section } from 'components/baseStyles/CommonStyle.styled';\n\nconst CatalogSection = styled(Section)`\n  padding: 0 0;\n`;\n\nconst CatalogContainer = styled(Container)`\n  margin: 0 auto;\n  padding: 0 0;\n  width: 100%;\n`;\n\nconst GridContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    justify-content: space-between;\n  }\n`;\n\nconst GridWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  width: 100%;\n  max-width: calc(100% - 20px);\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-left: 20px;\n  }\n`;\n\nexport { CatalogSection, CatalogContainer, GridContainer, GridWrapper };\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nimport { CatalogList } from '../Catalog/CatalogList/CatalogList';\nimport { Pagination } from 'utils/pagination';\nimport { getFavorites } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'components/helpers/Loader/Loader';\nimport { onFetchError } from 'components/helpers/Messages/NotifyMessages';\n\nimport * as SC from './Favorites.styled';\nimport { useSelector } from 'react-redux';\nimport { selectId } from 'redux/auth/selectors';\nimport { ShopBox, ShopBoxTitle } from 'components/UserComp/UserOrders/UserOrders.styled';\nimport { BtnBrown } from 'components/UserComp/UserData/UserData.styled';\n\nlet perPage = 12;\n\nexport const Favorites = () => {\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [totalPage, setTotalPage] = useState(0);\n  const [page, setPages] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = useSelector(selectId);\n  const { t } = useTranslation();\n\n  const setPage = toPage => {\n    searchParams.set('page', toPage);\n    setPages(toPage);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams({ page: 1, perPage });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!page || !perPage) {\n      const params = { page: 1, perPage };\n      setPages(1);\n      setSearchParams(params);\n    }\n\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await getFavorites(\n          `/auth/catalog/${id}?${searchParams}`,\n        );\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setProducts(data.data);\n        setTotalPage(Math.ceil(data.total / perPage));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [t, page, perPage, searchParams]);\n\n  return (\n    <SC.CatalogContainer>\n      <SC.CatalogSection>\n        <SC.GridContainer>\n          <SC.GridWrapper>\n            {isLoading ? onLoading() : onLoaded()}\n            {error && onFetchError(t('Whoops, something went wrong'))}\n            {products.length > 0 && !error && (\n              <CatalogList products={products} />\n            )}\n\n            <ShopBox>\n              <ShopBoxTitle>{\"You don't have favorite products\"}</ShopBoxTitle>\n              <BtnBrown>Shop</BtnBrown>\n            </ShopBox>\n\n            <Pagination\n              totalPage={totalPage}\n              changePage={setPage}\n              page={page}\n            />\n          </SC.GridWrapper>\n        </SC.GridContainer>\n      </SC.CatalogSection>\n    </SC.CatalogContainer>\n  );\n};\n\nFavorites.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      oldPrice: PropTypes.number.isRequired,\n      currentPrice: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          oldPrice: PropTypes.number,\n          currentPrice: PropTypes.number,\n          total: PropTypes.number,\n        }),\n      ),\n      totalQuantity: PropTypes.number,\n      typeOfPlants: PropTypes.string,\n      light: PropTypes.string,\n      petFriendly: PropTypes.string,\n      maintenance: PropTypes.string,\n      potSize: PropTypes.shape({\n        size: PropTypes.number,\n        unit: PropTypes.string,\n        _id: PropTypes.string,\n      }),\n      hardToKill: PropTypes.string,\n      rare: PropTypes.string,\n      waterSchedule: PropTypes.string,\n      images: PropTypes.array,\n      category: PropTypes.string,\n    }),\n  ),\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport { Favorites } from 'components/Favorites/Favorites';\n\nconst FavoritePage = () => {\n  const dispatch = useDispatch();\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Favorite\" description=\"Favorite of goods\" />\n      <Favorites />\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["CatalogList","_ref","favorites","products","isLoggedIn","useSelector","selectIsLoggedIn","user","getUser","map","item","selectId","routeParams","useParams","dispatch","useDispatch","currency","useContext","StatusContext","toggleFavorite","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","includes","removeFavorite","onSuccess","abrupt","addFavorite","stop","_x","apply","arguments","_jsx","SC","children","card","NavLink","to","concat","uuid","_jsxs","style","height","display","justifyContent","flexDirection","status","src","mainImage","alt","title","width","loading","discount","price","oldPrice","currentPrice","onClick","e","preventDefault","stopPropagation","addReload","onInfo","size","fill","theme","colors","darkGreen","color","beige","CatalogSection","styled","Section","_templateObject","_taggedTemplateLiteral","CatalogContainer","Container","_templateObject2","GridContainer","div","_templateObject3","breakpoints","desktop","GridWrapper","_templateObject4","Favorites","_useState","useState","_useState2","_slicedToArray","setProducts","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","totalPage","setTotalPage","_useState9","_useState10","page","setPages","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","t","useTranslation","useEffect","perPage","params","_getData","_yield$getFavorites","data","getFavorites","sent","onFetchError","Math","ceil","total","t0","finish","onLoading","onLoaded","length","ShopBox","ShopBoxTitle","BtnBrown","Pagination","changePage","toPage","set","window","scrollTo","top","left","behavior","addHeaderBottom","headerBottom","_Fragment","SEO","description"],"sourceRoot":""}