{"version":3,"file":"static/js/978.25814909.chunk.js","mappings":"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","sources":["components/Catalog/CatalogList/CatalogList.jsx","components/Favorites/Favorites.styled.js","components/Favorites/Favorites.jsx","pages/Favorite.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { NavLink, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addReload } from 'redux/reload/slice';\nimport { addFavorite, removeFavorite } from 'redux/auth/operations';\nimport { getUser, selectId, selectIsLoggedIn } from 'redux/auth/selectors';\nimport { onSuccess, onInfo } from 'components/helpers/Messages/NotifyMessages';\n// import { BASE_URL_IMG } from 'BASE_CONST/Base-const';\n\nimport theme from 'components/baseStyles/Variables.styled';\nimport * as SC from './CatalogList.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport {\n  selectCurrency,\n  selectNewPrice,\n  selectOldPrice,\n} from 'services/selectCurrency';\nimport { useTranslation } from 'react-i18next';\n\nexport const CatalogList = ({ products }) => {\n  const { t } = useTranslation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const user = useSelector(getUser).favorites;\n  let favorites;\n  user ? (favorites = user.map(item => item)) : (favorites = []);\n  const _id = useSelector(selectId); //isLoggedIn\n\n  const routeParams = useParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const { selectedCurrency } = useContext(StatusContext);\n\n  const toggleFavorite = async id => {\n    let isInFavorite = false;\n    favorites\n      ? (isInFavorite = favorites.includes(id))\n      : (isInFavorite = false);\n    if (isInFavorite) {\n      dispatch(removeFavorite(id));\n      onSuccess(t('Ups, just remove from the favorite!'));\n      return;\n    }\n    dispatch(addFavorite(id));\n    onSuccess(t('Great, just add to the favorite!'));\n  };\n\n  const handleFavoriteBtnClick = id => e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (routeParams.id === 'favorite') {\n      dispatch(addReload(true));\n    }\n    !isLoggedIn ? onInfo(t('You must be logged!')) : toggleFavorite(id);\n  };\n\n  return (\n    <SC.Grid>\n      {products.map(card => {\n        return (\n          <SC.Card key={card.uuid}>\n            <NavLink to={`/shop/byid/${card.article}`}>\n              <div\n                style={{\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexDirection: 'column',\n                }}\n              >\n                <SC.CardStatus>\n                  {\n                    location.pathname.includes('discount')\n                      ? `${t('discount')}: ${(\n                          +selectOldPrice(selectedCurrency, card).toFixed(2) -\n                          +selectNewPrice(selectedCurrency, card).toFixed(2)\n                        ).toFixed(2)} ${selectCurrency(selectedCurrency)}`\n                      : card?.status === 'rate'\n                      ? t('rate')\n                      : card?.status === 'discount'\n                      ? t('discount')\n                      : t('new')\n                    // : card?.status\n                    // ? card.status\n                    // : t('new')\n                  }\n                </SC.CardStatus>\n                <SC.CardImage\n                  src={card.mainImage}\n                  alt={card.title}\n                  loading=\"lazy\"\n                />\n                <SC.CardDescription>\n                  <SC.CardTitle>\n                    <SC.CardName>{card.title}</SC.CardName>\n                  </SC.CardTitle>\n                </SC.CardDescription>\n                <SC.CardInfo>\n                  {card.discount_ua !== 0 ? (\n                    <SC.CardPrices>\n                      {card.newPrice_ua && (\n                        <SC.CardDiscount>\n                          <span>{t('Price')}: </span>\n                          {selectNewPrice(selectedCurrency, card)}\n                          {selectCurrency(selectedCurrency)}\n                        </SC.CardDiscount>\n                      )}\n                      {card?.oldPrice_ua && (\n                        <SC.CardPrice>\n                          {selectOldPrice(selectedCurrency, card)}\n                          {selectCurrency(selectedCurrency)}\n                        </SC.CardPrice>\n                      )}\n                    </SC.CardPrices>\n                  ) : (\n                    <SC.CardPrices>\n                      {card?.newPrice_ua && (\n                        <SC.CardDiscount>\n                          {selectNewPrice(selectedCurrency, card)}\n                          {selectCurrency(selectedCurrency)}\n                        </SC.CardDiscount>\n                      )}\n                    </SC.CardPrices>\n                  )}\n                  <SC.BtnForFavorite\n                    onClick={handleFavoriteBtnClick(card.article)}\n                  >\n                    {favorites.includes(card.article) ? (\n                      <SC.IconFav size={30} fill={theme.colors.brown4} />\n                    ) : (\n                      <SC.IconFav size={30} color={theme.colors.beige} />\n                    )}\n                  </SC.BtnForFavorite>\n                </SC.CardInfo>\n              </div>\n            </NavLink>\n          </SC.Card>\n        );\n      })}\n    </SC.Grid>\n  );\n};\n\nCatalogList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({})),\n};\n","import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Container, Section } from 'components/baseStyles/CommonStyle.styled';\n\nconst CatalogSection = styled(Section)`\n  padding: 0 0;\n`;\n\nconst CatalogContainer = styled(Container)`\n  margin: 0 auto;\n  padding: 0 0;\n  width: 100%;\n`;\n\nconst GridContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    justify-content: space-between;\n  }\n`;\n\nconst GridWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  width: 100%;\n  max-width: calc(100% - 20px);\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-left: 20px;\n  }\n`;\n\nexport { CatalogSection, CatalogContainer, GridContainer, GridWrapper };\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nimport { CatalogList } from '../Catalog/CatalogList/CatalogList';\nimport { Pagination } from 'utils/pagination';\nimport { getFavorites } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'components/helpers/Loader/Loader';\nimport { onFetchError } from 'components/helpers/Messages/NotifyMessages';\n\nimport * as SC from './Favorites.styled';\nimport { useSelector } from 'react-redux';\nimport { selectId } from 'redux/auth/selectors';\nimport {\n  ShopBox,\n  ShopBoxTitle,\n} from 'components/UserComp/UserOrders/UserOrders.styled';\nimport { BtnBrown } from 'components/UserComp/UserData/UserData.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nlet perPage = 12;\n\nexport const Favorites = () => {\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [totalPage, setTotalPage] = useState(0);\n  const [page, setPages] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = useSelector(selectId);\n  const { t } = useTranslation();\n  const { selectedLanguage, selectedCurrency } = useContext(StatusContext);\n\n  const setPage = toPage => {\n    searchParams.set('page', toPage);\n    setPages(toPage);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams({ page: 1, perPage });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!page || !perPage) {\n      const params = { page: 1, perPage };\n      setPages(1);\n      setSearchParams(params);\n    }\n\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await getFavorites(\n          `/auth/shop/${selectedLanguage}/${id}?${searchParams}`,\n        );\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setProducts(data.data);\n        setTotalPage(Math.ceil(data.total / perPage));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [t, page, perPage, searchParams]);\n\n  return (\n    <SC.CatalogContainer>\n      <SC.CatalogSection>\n        <SC.GridContainer>\n          <SC.GridWrapper>\n            {isLoading ? onLoading() : onLoaded()}\n            {error && onFetchError(t('Whoops, something went wrong'))}\n            {products.length > 0 && !error ? (\n              <>\n                <CatalogList products={products} />\n                <Pagination\n                  totalPage={totalPage}\n                  changePage={setPage}\n                  page={page}\n                />\n              </>\n            ) : (\n              <ShopBox>\n                <ShopBoxTitle>\n                  {t(\"You don't have favorite products\")}\n                </ShopBoxTitle>\n                <Link to=\"/shop\" style={{ textDecoration: 'none' }}>\n                  <BtnBrown>{t('Shop')}</BtnBrown>\n                </Link>\n              </ShopBox>\n            )}\n          </SC.GridWrapper>\n        </SC.GridContainer>\n      </SC.CatalogSection>\n    </SC.CatalogContainer>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport { Favorites } from 'components/Favorites/Favorites';\n\nconst FavoritePage = () => {\n  const dispatch = useDispatch();\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Favorite\" description=\"Favorite of goods\" />\n      <Favorites />\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["CatalogList","_ref","products","t","useTranslation","isLoggedIn","useSelector","selectIsLoggedIn","user","getUser","favorites","map","item","selectId","routeParams","useParams","location","useLocation","dispatch","useDispatch","selectedCurrency","useContext","StatusContext","handleFavoriteBtnClick","id","e","preventDefault","stopPropagation","addReload","async","isInFavorite","includes","removeFavorite","onSuccess","addFavorite","toggleFavorite","onInfo","_jsx","SC","children","card","NavLink","to","concat","article","_jsxs","style","height","display","justifyContent","flexDirection","pathname","selectOldPrice","toFixed","selectNewPrice","selectCurrency","status","src","mainImage","alt","title","loading","discount_ua","newPrice_ua","oldPrice_ua","onClick","size","fill","theme","colors","brown4","color","beige","uuid","CatalogSection","styled","Section","_templateObject","_taggedTemplateLiteral","CatalogContainer","Container","_templateObject2","GridContainer","div","_templateObject3","breakpoints","desktop","GridWrapper","_templateObject4","Favorites","setProducts","useState","isLoading","setIsLoading","error","setError","totalPage","setTotalPage","page","setPages","searchParams","setSearchParams","useSearchParams","selectedLanguage","useEffect","perPage","params","data","getFavorites","onFetchError","Math","ceil","total","onLoading","onLoaded","length","_Fragment","Pagination","changePage","toPage","set","ShopBox","ShopBoxTitle","Link","textDecoration","BtnBrown","FavoritePage","window","scrollTo","top","left","behavior","addHeaderBottom","headerBottom","SEO","description"],"sourceRoot":""}