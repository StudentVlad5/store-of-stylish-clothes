{"version":3,"file":"static/js/886.33e6eaf4.chunk.js","mappings":"oRAGO,MAAMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAiBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAE9BC,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAkBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,Q,kCCsBpC,MAAMI,EAAYA,KACvB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,OACPC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,IAClCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GACrCK,GAAWC,EAAAA,EAAAA,MAkBXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,EAAQC,aAC1BC,SAlBeC,IACfZ,GAAa,GACb,MAAM,MAAEM,EAAK,SAAEC,GAAaK,EAC5BX,GACEY,EAAAA,EAAAA,IAAM,CACJP,QACAC,kBATJZ,GAAW,IAaXK,GAAa,EAAM,IAWfc,KACHX,EAAOY,OAAOT,OAASH,EAAOa,QAAQV,OACtCH,EAAOY,OAAOR,UAAYJ,EAAOa,QAAQT,UAClB,KAAxBJ,EAAOS,OAAON,OAQVW,EAA0BA,CAACC,EAAUC,IACjCD,EAEI,GAAAE,OAARD,EACGE,EAAAA,EAAMC,OAAOC,IACbF,EAAAA,EAAMC,OAAOE,QAHhB,KAKN,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAAAC,UACVF,EAAAA,EAAAA,KAACG,EAAAA,GAAa,CAAAD,UACZF,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CAACrB,iBAAkBC,EAAAA,EAAQC,aAAaiB,UAC7CG,EAAAA,EAAAA,MAAC1C,EAAS,CAACuB,SAAUR,EAAO4B,aAAcC,aAAa,MAAKL,SAAA,EAC1DF,EAAAA,EAAAA,KAAC1C,EAAU,CAAA4C,SAAEnC,EAAE,WACdE,IACCoC,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CACJC,MAAO,CACLC,YAAalB,EACXd,EAAOS,OAAON,MACdH,EAAOY,OAAOT,QAGlB8B,KAAK,QACLC,KAAK,QACLC,SAAU7B,EAAAA,EAAQC,aAAaJ,MAC/BiC,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOS,OAAON,MACrBoC,OAAQvC,EAAOwC,aAEfxC,EAAOS,OAAON,MAAgBH,EAAOY,OAAOT,OAG5CmB,EAAAA,EAAAA,KAACmB,EAAAA,GAAW,CAACC,MAAOxB,EAAAA,EAAMC,OAAOC,OAFjCE,EAAAA,EAAAA,KAACqB,EAAAA,GAAS,CAACD,MAAOxB,EAAAA,EAAMC,OAAOyB,QADT,KAKvB5C,EAAOY,OAAOT,OAASH,EAAOa,QAAQV,OACrCmB,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAArB,SAAExB,EAAOY,OAAOT,QACvB,MACJmB,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,UAAU,iBAAgBvB,SAAEnC,EAAE,cAIvCE,IACCoC,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEF,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CACJC,MAAO,CACLC,YAAalB,EACXd,EAAOS,OAAOL,SACdJ,EAAOY,OAAOR,WAGlB6B,KAAK,WACLC,KAAMxC,EAAW,OAAS,WAC1B0C,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOS,OAAOL,SACrBmC,OAAQvC,EAAOwC,cAGjBlB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CAACC,QA7DPC,KACnBvD,GAAaD,EAAS,EA4D0B8B,SAChC9B,GAA8B4B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,KAAzB7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAY,MAE3BpD,EAAOY,OAAOR,UAAYJ,EAAOa,QAAQT,UACxCkB,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAAArB,SAAExB,EAAOY,OAAOR,WACvB,MACJkB,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACC,UAAU,iBAAgBvB,SAAEnC,EAAE,kBAGxCsC,EAAAA,EAAAA,MAAC0B,EAAAA,GAAY,CAAA7B,SAAA,CACVjC,IACC+B,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CACFpB,KAAK,SACLqB,SAAU5C,EACV,aAAW,iBAAgBa,SAE1B5B,EAAY,UAAYP,EAAE,cAI7BE,IACA+B,EAAAA,EAAAA,KAACgC,EAAAA,GAAG,CAACpB,KAAK,SAAQV,SAAE5B,EAAY,UAAYP,EAAE,cAEhDsC,EAAAA,EAAAA,MAAC6B,EAAAA,GAAO,CAAAhC,SAAA,EACNF,EAAAA,EAAAA,KAACmC,EAAAA,GAAU,CAACC,GAAG,YAAWlC,SAAEnC,EAAE,qBAC9BiC,EAAAA,EAAAA,KAACmC,EAAAA,GAAU,CAACC,GAAG,mBAAkBlC,SAC9BnC,EAAE,yCAOH,E,aC1JlB,MAqBA,EArBcsE,KACZ,MAAM7D,GAAWC,EAAAA,EAAAA,MAYjB,OAVA6D,OAAOC,SAAS,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,YAE7CC,EAAAA,EAAAA,YAAU,KACRnE,GACEoE,EAAAA,EAAAA,GAAgB,CACdC,aAAc,oBAEjB,GACA,KAGDxC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA5C,SAAA,EACEF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAG,CAACC,MAAM,QAAQC,YAAY,4BAC/BjD,EAAAA,EAAAA,KAAClC,EAAS,MACT,C","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { FormTitle, StyledForm } from '../AuthForm.styled';\n\nexport const TitleLogin = styled(FormTitle)``;\n\nexport const FormLogin = styled(StyledForm)``;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport schemas from 'utils/schemas';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { ReactComponent as ImEye } from 'images/svg/eye-key-look-password-security-see-svgrepo-com.svg';\nimport { ReactComponent as ImEyeBlocked } from 'images/svg/eye-crossed-svgrepo-com.svg';\n\nimport { FormLogin, TitleLogin } from './LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  BoxText,\n  Btn,\n  BtnContainer,\n  ErrorBox,\n  FormContainer,\n  FormSection,\n  IconInValid,\n  IconValid,\n  Input,\n  ShowPassword,\n  Span,\n  StyledLink,\n} from '../AuthForm.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const LoginForm = () => {\n  const { t } = useTranslation();\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    setIsLoading(true);\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email,\n        password,\n      }),\n      hideForm(),\n    );\n    setIsLoading(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schemas.schemasLogin,\n    onSubmit,\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    formik.values.email === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.brown4}`;\n  };\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.schemasLogin}>\n          <FormLogin onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleLogin>{t('Login')}</TitleLogin>\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  validate={schemas.schemasLogin.email}\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={theme.colors.green} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.email || formik.touched.email ? (\n                  <ErrorBox>{formik.errors.email}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Email')}</Span>\n              </div>\n            )}\n\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrorBox>{formik.errors.password}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Password')}</Span>\n              </div>\n            )}\n            <BtnContainer>\n              {isShown && (\n                <Btn\n                  type=\"submit\"\n                  disabled={isValid}\n                  aria-label=\"submit sign in\"\n                >\n                  {isLoading ? 'Loading' : t('Sign In')}\n                </Btn>\n              )}\n\n              {!isShown && (\n                <Btn type=\"submit\">{isLoading ? 'Loading' : t('Sign In')}</Btn>\n              )}\n              <BoxText>\n                <StyledLink to=\"/register\">{t('Create account')}</StyledLink>\n                <StyledLink to=\"/forgot_password\">\n                  {t('Forgot your password?')}\n                </StyledLink>\n              </BoxText>\n            </BtnContainer>\n          </FormLogin>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default LoginForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SEO } from 'utils/SEO';\nimport { LoginForm } from 'components/Auth/LoginForm/LoginForm';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"LogIn\" description=\"Log in to your account\" />\n      <LoginForm />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["TitleLogin","styled","FormTitle","_templateObject","_taggedTemplateLiteral","FormLogin","StyledForm","_templateObject2","LoginForm","t","useTranslation","isShown","setIsShown","useState","showPass","setShowPass","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","email","password","validationSchema","schemas","schemasLogin","onSubmit","values","logIn","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","theme","colors","red","brown4","_jsx","FormSection","children","FormContainer","Formik","_jsxs","handleSubmit","autoComplete","Input","style","borderColor","name","type","validate","onChange","handleChange","value","onBlur","handleBlur","IconInValid","color","IconValid","green","ErrorBox","Span","className","ShowPassword","onClick","showPassword","ImEye","ImEyeBlocked","BtnContainer","Btn","disabled","BoxText","StyledLink","to","Login","window","scrollTo","top","left","behavior","useEffect","addHeaderBottom","headerBottom","_Fragment","SEO","title","description"],"sourceRoot":""}