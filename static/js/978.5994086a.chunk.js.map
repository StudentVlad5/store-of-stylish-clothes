{"version":3,"file":"static/js/978.5994086a.chunk.js","mappings":"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","sources":["components/Catalog/CatalogList/CatalogList.jsx","components/Favorites/Favorites.styled.js","components/Favorites/Favorites.jsx","pages/Favorite.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { NavLink, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addReload } from 'redux/reload/slice';\nimport { addFavorite, removeFavorite } from 'redux/auth/operations';\nimport { getUser, selectId, selectIsLoggedIn } from 'redux/auth/selectors';\nimport { onSuccess, onInfo } from 'components/helpers/Messages/NotifyMessages';\n// import { BASE_URL_IMG } from 'BASE_CONST/Base-const';\n\nimport theme from 'components/baseStyles/Variables.styled';\nimport * as SC from './CatalogList.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\nimport {\n  selectCurrency,\n  selectNewPrice,\n  selectOldPrice,\n} from 'services/selectCurrency';\nimport { useTranslation } from 'react-i18next';\n\nexport const CatalogList = ({ products }) => {\n  const {t} = useTranslation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const user = useSelector(getUser).favorites;\n  let favorites;\n  user ? (favorites = user.map(item => item)) : (favorites = []);\n  const _id = useSelector(selectId); //isLoggedIn\n\n  const routeParams = useParams();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const { selectedCurrency } = useContext(StatusContext);\n\n  const toggleFavorite = async id => {\n    let isInFavorite = false;\n    favorites\n      ? (isInFavorite = favorites.includes(id))\n      : (isInFavorite = false);\n    if (isInFavorite) {\n      dispatch(removeFavorite(id));\n      onSuccess('Ups, just remove from the favorite!');\n      return;\n    }\n    dispatch(addFavorite(id));\n    onSuccess('Great, just add to the favorite!');\n  };\n\n  const handleFavoriteBtnClick = id => e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (routeParams.id === 'favorite') {\n      dispatch(addReload(true));\n    }\n    !isLoggedIn ? onInfo('You must be loggined!') : toggleFavorite(id);\n  };\n\n  return (\n    <SC.Grid>\n      {products.map(card => {\n        return (\n          <SC.Card key={card.uuid}>\n            <NavLink to={`/shop/byid/${card.article}`}>\n              <div\n                style={{\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexDirection: 'column',\n                }}\n              >\n                <SC.CardStatus>\n                  {location.pathname.includes('discount')\n                    ? `discount: ${(\n                        +selectOldPrice(selectedCurrency, card).toFixed(2) -\n                        +selectNewPrice(selectedCurrency, card).toFixed(2)\n                      ).toFixed(2)} ${selectCurrency(selectedCurrency)}`\n                    : card?.status\n                    ? card.status\n                    : 'new'}\n                </SC.CardStatus>\n                <SC.CardImage\n                  src={card.mainImage}\n                  alt={card.title}\n                  width=\"285\"\n                  height=\"460\"\n                  loading=\"lazy\"\n                />\n                <SC.CardDescription>\n                  <SC.CardTitle>\n                    <SC.CardName>{card.title}</SC.CardName>\n                  </SC.CardTitle>\n                </SC.CardDescription>\n                <SC.CardInfo>\n                  {card.discount_ua !== 0 ? (\n                    <SC.CardPrices>\n                      {card.price_ua && (\n                        <SC.CardDiscount>\n                          <span>{t(\"Price\")}: </span>\n                          {selectNewPrice(selectedCurrency, card)}\n                          {selectCurrency(selectedCurrency)}\n                        </SC.CardDiscount>\n                      )}\n                      {card?.oldPrice_ua && (\n                        <SC.CardPrice>\n                          {selectOldPrice(selectedCurrency, card)}\n                          {selectCurrency(selectedCurrency)}\n                        </SC.CardPrice>\n                      )}\n                    </SC.CardPrices>\n                  ) : (\n                    <SC.CardPrices>\n                      {card?.price_ua && (\n                        <SC.CardDiscount>\n                          {selectNewPrice(selectedCurrency, card)}\n                          {selectCurrency(selectedCurrency)}\n                        </SC.CardDiscount>\n                      )}\n                    </SC.CardPrices>\n                  )}\n                  <SC.BtnForFavorite\n                    onClick={handleFavoriteBtnClick(card.article)}\n                  >\n                    {favorites.includes(card.article) ? (\n                      <SC.IconFav size={30} fill={theme.colors.brown4} />\n                    ) : (\n                      <SC.IconFav size={30} color={theme.colors.beige} />\n                    )}\n                  </SC.BtnForFavorite>\n                </SC.CardInfo>\n              </div>\n            </NavLink>\n          </SC.Card>\n        );\n      })}\n    </SC.Grid>\n  );\n};\n\nCatalogList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({})),\n};\n","import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Container, Section } from 'components/baseStyles/CommonStyle.styled';\n\nconst CatalogSection = styled(Section)`\n  padding: 0 0;\n`;\n\nconst CatalogContainer = styled(Container)`\n  margin: 0 auto;\n  padding: 0 0;\n  width: 100%;\n`;\n\nconst GridContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n\n  width: 100%;\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    justify-content: space-between;\n  }\n`;\n\nconst GridWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  width: 100%;\n  max-width: calc(100% - 20px);\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    padding-left: 20px;\n  }\n`;\n\nexport { CatalogSection, CatalogContainer, GridContainer, GridWrapper };\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nimport { CatalogList } from '../Catalog/CatalogList/CatalogList';\nimport { Pagination } from 'utils/pagination';\nimport { getFavorites } from 'services/APIservice';\nimport { onLoading, onLoaded } from 'components/helpers/Loader/Loader';\nimport { onFetchError } from 'components/helpers/Messages/NotifyMessages';\n\nimport * as SC from './Favorites.styled';\nimport { useSelector } from 'react-redux';\nimport { selectId } from 'redux/auth/selectors';\nimport {\n  ShopBox,\n  ShopBoxTitle,\n} from 'components/UserComp/UserOrders/UserOrders.styled';\nimport { BtnBrown } from 'components/UserComp/UserData/UserData.styled';\nimport { StatusContext } from 'components/ContextStatus/ContextStatus';\n\nlet perPage = 12;\n\nexport const Favorites = () => {\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [totalPage, setTotalPage] = useState(0);\n  const [page, setPages] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = useSelector(selectId);\n  const { t } = useTranslation();\n  const { selectedLanguage, selectedCurrency } = useContext(StatusContext);\n\n  const setPage = toPage => {\n    searchParams.set('page', toPage);\n    setPages(toPage);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams({ page: 1, perPage });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!page || !perPage) {\n      const params = { page: 1, perPage };\n      setPages(1);\n      setSearchParams(params);\n    }\n\n    (async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await getFavorites(\n          `/auth/shop/${selectedLanguage}/${id}?${searchParams}`,\n        );\n        if (!data) {\n          return onFetchError(t('Whoops, something went wrong'));\n        }\n        setProducts(data.data);\n        setTotalPage(Math.ceil(data.total / perPage));\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [t, page, perPage, searchParams]);\n\n  return (\n    <SC.CatalogContainer>\n      <SC.CatalogSection>\n        <SC.GridContainer>\n          <SC.GridWrapper>\n            {isLoading ? onLoading() : onLoaded()}\n            {error && onFetchError(t('Whoops, something went wrong'))}\n            {products.length > 0 && !error ? (\n              <>\n                <CatalogList products={products} />\n                <Pagination\n                  totalPage={totalPage}\n                  changePage={setPage}\n                  page={page}\n                />\n              </>\n            ) : (\n              <ShopBox>\n                <ShopBoxTitle>\n                  {t(\"You don't have favorite products\")}\n                </ShopBoxTitle>\n                <Link to=\"/shop\" style={{ textDecoration: 'none' }}>\n                  <BtnBrown>{t(\"Shop\")}</BtnBrown>\n                </Link>\n              </ShopBox>\n            )}\n          </SC.GridWrapper>\n        </SC.GridContainer>\n      </SC.CatalogSection>\n    </SC.CatalogContainer>\n  );\n};\n\nFavorites.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      oldPrice: PropTypes.number.isRequired,\n      currentPrice: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      options: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          oldPrice: PropTypes.number,\n          currentPrice: PropTypes.number,\n          total: PropTypes.number,\n        }),\n      ),\n      totalQuantity: PropTypes.number,\n      typeOfPlants: PropTypes.string,\n      light: PropTypes.string,\n      petFriendly: PropTypes.string,\n      maintenance: PropTypes.string,\n      potSize: PropTypes.shape({\n        size: PropTypes.number,\n        unit: PropTypes.string,\n        _id: PropTypes.string,\n      }),\n      hardToKill: PropTypes.string,\n      rare: PropTypes.string,\n      waterSchedule: PropTypes.string,\n      images: PropTypes.array,\n      category: PropTypes.string,\n    }),\n  ),\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { SEO } from 'utils/SEO';\nimport { useDispatch } from 'react-redux';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport { Favorites } from 'components/Favorites/Favorites';\n\nconst FavoritePage = () => {\n  const dispatch = useDispatch();\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Favorite\" description=\"Favorite of goods\" />\n      <Favorites />\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["CatalogList","_ref","favorites","products","t","useTranslation","isLoggedIn","useSelector","selectIsLoggedIn","user","getUser","map","item","selectId","routeParams","useParams","location","useLocation","dispatch","useDispatch","selectedCurrency","useContext","StatusContext","toggleFavorite","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","includes","removeFavorite","onSuccess","abrupt","addFavorite","stop","_x","apply","arguments","_jsx","SC","children","card","NavLink","to","concat","article","_jsxs","style","height","display","justifyContent","flexDirection","pathname","selectOldPrice","toFixed","selectNewPrice","selectCurrency","status","src","mainImage","alt","title","width","loading","discount_ua","price_ua","oldPrice_ua","onClick","e","preventDefault","stopPropagation","addReload","onInfo","size","fill","theme","colors","brown4","color","beige","uuid","CatalogSection","styled","Section","_templateObject","_taggedTemplateLiteral","CatalogContainer","Container","_templateObject2","GridContainer","div","_templateObject3","breakpoints","desktop","GridWrapper","_templateObject4","Favorites","_useState","useState","_useState2","_slicedToArray","setProducts","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","totalPage","setTotalPage","_useState9","_useState10","page","setPages","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useContext","selectedLanguage","useEffect","perPage","params","_getData","_yield$getFavorites","data","getFavorites","sent","onFetchError","Math","ceil","total","t0","finish","onLoading","onLoaded","length","_Fragment","Pagination","changePage","toPage","set","ShopBox","ShopBoxTitle","Link","textDecoration","BtnBrown","window","scrollTo","top","left","behavior","addHeaderBottom","headerBottom","SEO","description"],"sourceRoot":""}