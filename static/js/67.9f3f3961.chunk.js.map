{"version":3,"file":"static/js/67.9f3f3961.chunk.js","mappings":"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","sources":["components/Auth/ForgotPasswordForm/ForgotPasswordForm.styled.js","components/Auth/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPassword.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { FormTitle, StyledForm } from '../AuthForm.styled';\n\nexport const TitleRegister = styled(FormTitle)``;\n\nexport const FormRegister = styled(StyledForm)``;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport schemas from 'utils/schemas';\nimport { forgotPasswordAuth } from 'redux/auth/operations';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { FormRegister, TitleRegister } from './ForgotPasswordForm.styled.js';\nimport { onSuccess } from 'components/helpers/Messages/NotifyMessages.jsx';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  BoxText,\n  Btn,\n  BtnContainer,\n  ErrorBox,\n  FormContainer,\n  FormSection,\n  IconInValid,\n  IconValid,\n  Input,\n  Span,\n  StyledLink,\n} from '../AuthForm.styled.js';\n\nconst ForgotPasswordForm = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmit = ({ values }) => {\n    setIsLoading(true);\n    const { email } = values;\n    dispatch(\n      forgotPasswordAuth({\n        email,\n      }),\n    );\n    onSuccess('password has been changed. Please check your email');\n    setIsLoading(false);\n    navigate(`/signin`);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: schemas.changePasswordSchema,\n    onSubmit: (values, action) => {\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) || formik.values.email === ''\n      ? true\n      : false;\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.changePasswordSchema}>\n          <FormRegister onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleRegister>{'Forgot Password'}</TitleRegister>\n            <div>\n              <Input\n                style={{\n                  borderColor: showAccentValidateInput(\n                    formik.values.email,\n                    formik.errors.email,\n                  ),\n                }}\n                name=\"email\"\n                type=\"email\"\n                value={formik.values.email}\n                validate={schemas.changePasswordSchema.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n              />\n\n              {!formik.values.email ? null : !formik.errors.email ? (\n                <IconValid color={theme.colors.green1} />\n              ) : (\n                <IconInValid color={theme.colors.red} />\n              )}\n              {formik.errors.email && formik.touched.email ? (\n                <ErrorBox>{formik.errors.email}</ErrorBox>\n              ) : null}\n              <Span className=\"floating-label\">Email</Span>\n            </div>\n            <BtnContainer>\n              <Btn\n                type=\"submit\"\n                disabled={isValid}\n                aria-label=\"submit to change password\"\n              >\n                {isLoading ? 'Loading' : 'Change Password'}{' '}\n              </Btn>\n              <BoxText>\n                <span>{'Already have an account?'}</span>{' '}\n                <StyledLink to=\"/signin\">{'Sign In'}</StyledLink>\n              </BoxText>\n            </BtnContainer>\n          </FormRegister>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SEO } from 'utils/SEO';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport ForgotPasswordForm from 'components/Auth/ForgotPasswordForm/ForgotPasswordForm';\n\nconst ForgotPasswordPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO\n        title=\"Change Password\"\n        description=\"Change Password for your account\"\n      />\n      <ForgotPasswordForm />\n    </>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["TitleRegister","styled","FormTitle","_templateObject","_taggedTemplateLiteral","FormRegister","StyledForm","_templateObject2","hasValue","isValide","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","initialValues","email","validationSchema","schemas","changePasswordSchema","onSubmit","values","action","_ref","forgotPasswordAuth","onSuccess","isValid","errors","touched","_jsx","FormSection","children","FormContainer","Formik","_jsxs","handleSubmit","autoComplete","Input","style","borderColor","concat","theme","colors","red","darkGreen","name","type","value","validate","onChange","handleChange","onBlur","handleBlur","IconInValid","color","IconValid","green1","ErrorBox","Span","className","BtnContainer","Btn","disabled","BoxText","StyledLink","to","useEffect","addHeaderBottom","headerBottom","_Fragment","SEO","title","description","ForgotPasswordForm"],"sourceRoot":""}