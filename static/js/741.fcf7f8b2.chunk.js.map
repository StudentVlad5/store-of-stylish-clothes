{"version":3,"file":"static/js/741.fcf7f8b2.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { Button } from 'components/helpers/ButtonSplit/ButtonSplit.styled';\nimport { FormTitle, StyledForm } from '../AuthForm.styled';\n\nexport const TitleRegister = styled(FormTitle)``;\n\nexport const FormRegister = styled(StyledForm)``;\n\nexport const BackButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 125px;\n\n  color: ${theme.colors.white};\n  background: ${theme.colors.brown4};\n  font-family: ${theme.fonts[0]};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 300;\n  line-height: normal;\n  text-transform: uppercase;\n  border: none;\n  border-radius: 12px;\n  transform: scale(1);\n\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  transition: ${theme.transition[0]};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n    border: 2px solid ${theme.colors.brown4};\n    color: ${theme.colors.brown4};\n    background: transparent;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    width: 180px;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik, Formik } from 'formik';\nimport { ReactComponent as ImEye } from 'images/svg/eye-key-look-password-security-see-svgrepo-com.svg';\nimport { ReactComponent as ImEyeBlocked } from 'images/svg/eye-crossed-svgrepo-com.svg';\nimport schemas from 'utils/schemas';\nimport { register } from 'redux/auth/operations';\nimport theme from 'components/baseStyles/Variables.styled';\nimport { BackButton, FormRegister, TitleRegister } from './RegisterForm.styled';\nimport {\n  BoxText,\n  Btn,\n  BtnContainer,\n  ErrorBox,\n  FormContainer,\n  FormSection,\n  IconInValid,\n  IconValid,\n  Input,\n  ShowPassword,\n  Span,\n  StyledLink,\n} from '../AuthForm.styled';\nimport { useTranslation } from 'react-i18next';\n\nconst RegisterForm = () => {\n  const { t } = useTranslation();\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ values }) => {\n    setIsLoading(true);\n    const { name: userName, email, password, phone, location } = values;\n    dispatch(\n      register({\n        userName,\n        email,\n        password,\n        phone,\n        location,\n      }),\n    );\n    setIsLoading(false);\n  };\n\n  const showForm = () => {\n    setIsShown(false);\n  };\n\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      location: '',\n    },\n    validationSchema: schemas.registerSchema,\n    onSubmit: (values, action) => {\n      onSubmit({ values, action });\n    },\n  });\n\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n\n  const showAccentValidateInput = (hasValue, isValide) => {\n    return !hasValue\n      ? null\n      : isValide\n      ? `${theme.colors.red}`\n      : `${theme.colors.darkGreen}`;\n  };\n\n  return (\n    <FormSection>\n      <FormContainer>\n        <Formik validationSchema={schemas.registerSchema}>\n          <FormRegister onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <TitleRegister>{t('Register')}</TitleRegister>\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.email,\n                      formik.errors.email,\n                    ),\n                  }}\n                  name=\"email\"\n                  type=\"email\"\n                  value={formik.values.email}\n                  validate={schemas.registerSchema.email}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                />\n\n                {!formik.values.email ? null : !formik.errors.email ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.email && formik.touched.email ? (\n                  <ErrorBox>{formik.errors.email}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Email')}</Span>\n              </div>\n            )}\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.password,\n                      formik.errors.password,\n                    ),\n                  }}\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrorBox>{formik.errors.password}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Password')}</Span>\n              </div>\n            )}\n            {isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.confirmPassword,\n                      formik.errors.confirmPassword,\n                    ),\n                  }}\n                  name=\"confirmPassword\"\n                  type={showConfirmPass ? 'text' : 'password'}\n                  onChange={formik.handleChange}\n                  value={formik.values.confirmPassword}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showConfirmPassword}>\n                  {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.confirmPassword &&\n                formik.touched.confirmPassword ? (\n                  <ErrorBox>{formik.errors.confirmPassword}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Confirm Password')}</Span>\n              </div>\n            )}\n            {isShown && (\n              <BtnContainer>\n                <Btn type=\"button\" onClick={showForm} disabled={isValid}>\n                  {t('Next')}\n                </Btn>\n                <BoxText>\n                  <span>{t('Already have an account?')}</span>\n                  <StyledLink to=\"/signin\">{t('Sign In')}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n            {!isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.name,\n                      formik.errors.name,\n                    ),\n                  }}\n                  name=\"name\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                  onBlur={formik.handleBlur}\n                />\n                {!formik.values.name ? null : !formik.errors.name ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.name && formik.touched.name ? (\n                  <ErrorBox>{formik.errors.name}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Name')}</Span>\n              </div>\n            )}\n            {!isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.location,\n                      formik.errors.location,\n                    ),\n                  }}\n                  name=\"location\"\n                  type=\"text\"\n                  value={formik.values.location}\n                  onBlur={formik.handleBlur}\n                  onChange={e => {\n                    formik.handleChange(e);\n                  }}\n                />\n                {!formik.values.location ? null : !formik.errors.location ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n\n                {formik.errors.location && formik.touched.location ? (\n                  <ErrorBox>{formik.errors.location}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Location, region')}</Span>\n              </div>\n            )}\n            {!isShown && (\n              <div>\n                <Input\n                  style={{\n                    borderColor: showAccentValidateInput(\n                      formik.values.phone,\n                      formik.errors.phone,\n                    ),\n                  }}\n                  id=\"phone\"\n                  type=\"phone\"\n                  onChange={formik.handleChange}\n                  value={formik.values.phone}\n                  onBlur={formik.handleBlur}\n                  name=\"phone\"\n                />\n                {!formik.values.phone ? null : !formik.errors.phone ? (\n                  <IconValid color={theme.colors.green1} />\n                ) : (\n                  <IconInValid color={theme.colors.red} />\n                )}\n                {formik.errors.phone && formik.touched.phone ? (\n                  <ErrorBox>{formik.errors.phone}</ErrorBox>\n                ) : null}\n                <Span className=\"floating-label\">{t('Phone')}</Span>\n              </div>\n            )}\n            {!isShown && (\n              <BtnContainer>\n                <BackButton\n                  type=\"button\"\n                  aria-label=\"back button\"\n                  onClick={hideForm}\n                >\n                  {t('Back')}\n                </BackButton>\n\n                <Btn type=\"submit\" aria-label=\"submit registration\">\n                  {isLoading ? 'Loading' : t('Register')}\n                </Btn>\n\n                <BoxText>\n                  <span>{t('Already have an account?')}</span>{' '}\n                  <StyledLink to=\"/signin\">{t('Sign In')}</StyledLink>\n                </BoxText>\n              </BtnContainer>\n            )}\n          </FormRegister>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SEO } from 'utils/SEO';\nimport { addHeaderBottom } from 'redux/header_bottom/operation';\nimport RegisterForm from 'components/Auth/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n\n  window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\n  useEffect(() => {\n    dispatch(\n      addHeaderBottom({\n        headerBottom: 'addHeaderBottom',\n      }),\n    );\n  }, []);\n\n  return (\n    <>\n      <SEO title=\"Register\" description=\"Register your account\" />\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["TitleRegister","styled","FormTitle","_templateObject","_taggedTemplateLiteral","FormRegister","StyledForm","_templateObject2","BackButton","Button","_templateObject3","theme","colors","white","brown4","fonts","transition","breakpoints","desktop","t","useTranslation","_useState","useState","_useState2","_slicedToArray","isShown","setIsShown","_useState3","_useState4","showPass","setShowPass","_useState5","_useState6","showConfirmPass","setShowConfirmPass","_useState7","_useState8","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","confirmPassword","phone","location","validationSchema","schemas","registerSchema","onSubmit","values","action","_ref","userName","register","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","concat","red","darkGreen","_jsx","FormSection","children","FormContainer","Formik","_jsxs","handleSubmit","autoComplete","Input","style","borderColor","type","value","validate","onChange","handleChange","onBlur","handleBlur","IconInValid","color","IconValid","green1","ErrorBox","Span","className","ShowPassword","onClick","ImEye","ImEyeBlocked","BtnContainer","Btn","disabled","BoxText","StyledLink","to","e","id","window","scrollTo","top","left","behavior","useEffect","addHeaderBottom","headerBottom","_Fragment","SEO","title","description","RegisterForm"],"sourceRoot":""}